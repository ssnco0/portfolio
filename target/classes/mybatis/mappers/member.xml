<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.member">
	<resultMap id="memResult" type="memberVO">
		<result property="cusId" column="cusId" />
        <result property="cusPhone" column="cusPhone" />
        <result property="cusPassword" column="cussPassword" />
        <result property="cusEmail" column="CusEmail" />
        <result property="cusName" column="cusName" />
		<result property="cusBirth" column="cusBirth" />
		<result property="cusAdress" column="cusAdress" />
		<result property="cusSignupDate" column="cusSignupDate" />
		<result property="cusAdv" column="cusAdv" />
		<result property="cusQrNo" column="cusQrNo" />
		<result property="cusToMil" column="cusToMil" />
			
	</resultMap> 

<!-- 회원가입 -->
	<!-- 사용자 CusUser -->
	<insert id="insertMember" parameterType="memberVO">
		<![CDATA[
		 insert into CusUser(cusId, cusPhone, cusPassword, cusEmail, cusName,
			 cusBirth, cusAdress, cusSignupDate, cusAdv, cusQrNo, cusTotMil)
		 
		 values(#{cusId}, #{cusPhone}, #{cusPassword}, #{cusEmail}, #{cusName}, #{cusBirth}, 
		 	#{cusAdress}, sysdate, #{cusAdv}, #{cusQrNo}, #{cusTotMil})
		]]>
	</insert>
	
	<!-- 로그인 -->
	<select id="login" resultType="memberVO"
		parameterType="java.util.Map"> <![CDATA[ 
		select * from cusUser 
		where cusId=#{cusId} 
		and cusPassword=#{cusPassword} 
		]]>
	</select>

	<!-- ID 중복 -->
	<select id="selectOverlappedID" parameterType="String"
		resultType="String">
		select decode(count(*),1, 'true', 0, 'false')
		from cusUser
		where cusId = #{cusId}
	</select>
	<!-- 휴대폰 중복 -->
	<select id="selectOverlappedPhone" parameterType="String"
		resultType="String">
		select decode(count(*),1, 'true', 0, 'false')
		from cusUser
		where cusPhone = #{cusPhone}
	</select>
	<!-- 이메일 중복 -->
	<select id="selectOverlappedEmail" parameterType="String"
		resultType="String">
		select decode(count(*),1, 'true', 0, 'false')
		from cusUser
		where cusEmail = #{cusEmail}
	</select>
	
	<!-- 마이페이지 -->
	<select id="selectMyDetailInfo" resultType="memberVO"
		parameterType="String">
	    <![CDATA[
			select * from  cusUser
			where cusId=#{cusId}
    	]]>
	</select>
	
	<!-- 아이디 찾기  -->
	<select id="findid" parameterType="String" resultType="String">
	    <![CDATA[
			select cusId from cusUser
			where cusEmail=#{email}
    	]]>
	</select>
	
	<!-- 비밀번호 찾기  -->
	<update id="update_pw" parameterType="memberVO">
		<![CDATA[
		update cusUser set cusPassword = #{cusPassword} where cusId = #{cusId}
		]]>
	</update>
	
		<!-- 정보 수정 -->
	<update id="memberUpdate" parameterType="memberVO">
	<![CDATA[
		update cusUser
		set
		cusPhone=#{cusPhone},
		cusPassword=#{cusPassword},
		cusAdress=#{cusAdress}
		where
		cusId=#{cusId}
	]]>
	</update>
		
<!--환불 사용자 마일리지 수정  -->
	<update id="cusRefunTotMil" parameterType="map">
		<![CDATA[
		update cusUser set custotmil = ((select custotmil from cususer where cusid = #{cusId}) - #{milStack} + #{payUseMil})
		 where cusId = #{cusId}
		]]>
	</update>
	
	<select id="selectCusid" resultMap="memResult">
		<![CDATA[
         select * from cususer where cusid = #{selectCusIdChild}
         ]]>
	</select>
	<!--사용자 토탈 마일리지 수정  -->
	
	<update id="saveTotMil" parameterType="paySaveVO">
		update cususer set custotmil = ((select custotmil from cususer where cusid = #{cusId}) + #{milStack} - #{payUseMil})
		where cusid = #{cusId}
	</update>	
	
	<update id="refundCusTotMil" parameterType="paymentVO">
		<![CDATA[
		update cususer set custotmil = ((select custotmil from cususer where cusid = trim(#{cusId})) - #{milStack} + #{payUseMil})
		where cusid = trim(#{cusId})
		   ]]>
	</update>
	
		<select id="selectAllCuponList4" resultMap="memResult">
      <![CDATA[
         select cusId from cusUser
      ]]>
	</select>
	

</mapper>



